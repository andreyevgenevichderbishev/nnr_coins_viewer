Coin Explorer: Веб-приложение для анализа данных о монетах
Coin Explorer — это мой pet-проект, демонстрирующий навыки в области data science и веб-разработки. Приложение собирает, обрабатывает и визуализирует данные о монетах, полученные из отдельных HTML-страниц с использованием Python. В результате скрапинга данные структурированы в pandas DataFrame, а затем сохранены в базе данных SQLite для удобного доступа и последующего анализа.

Обзор проекта
Проект включает в себя полный цикл обработки данных:

Сбор данных: С использованием Python и библиотек (например, BeautifulSoup) происходит парсинг HTML-страниц, содержащих информацию о монетах.
Обработка и структурирование: Полученные данные очищаются и приводятся к единому формату с помощью pandas, что позволяет легко анализировать и манипулировать информацией.
Хранение: Обработанный DataFrame сохраняется в базе данных SQLite, что обеспечивает быстрый доступ и удобное масштабирование при небольшом объёме изменений данных.
Веб-приложение: С помощью Flask и SQLAlchemy реализован интуитивно понятный интерфейс для просмотра данных. Приложение поддерживает динамическую подгрузку данных (infinite scroll), продвинутый поиск и фильтрацию, а также сортировку с использованием пользовательского порядка для поля «condition» (например, «Плохое» — 0, «Хорошее» — 2, «Отличное» — 4 и т.д.).
Основные возможности
Парсинг HTML и обработка данных:
Данные о монетах собираются с различных HTML-страниц, после чего с помощью pandas они приводятся к удобному для анализа виду.

Хранение в SQLite:
Использование SQLite позволяет хранить данные в одном файле, что упрощает развертывание и эксплуатацию приложения. Благодаря SQLAlchemy осуществляется эффективное взаимодействие с базой данных.

Расширенный поиск и фильтрация:
Пользователь может выполнять поиск по всем полям монеты, что обеспечивает быстрый доступ к интересующей информации.

Пользовательская сортировка:
Сортировка по полю «condition» реализована с использованием словаря значений, что позволяет упорядочить записи не по лексикографическому принципу, а согласно заранее определённой логике (например, «Плохое» – 0, «Удовлетворительное» – 1, «Хорошее» – 2, «Очень хорошее» – 3, «Отличное» – 4).

Динамическая подгрузка данных (infinite scroll):
Вместо традиционной постраничной навигации реализована подгрузка данных по мере прокрутки страницы с использованием AJAX, что обеспечивает плавное и современное взаимодействие с пользователем.

Удобный пользовательский интерфейс:
В левом верхнем углу страницы отображается общее количество найденных монет, что помогает пользователю ориентироваться в результатах поиска. Миниатюрные изображения монет с функцией увеличения по наведению не перекрывают заголовок таблицы благодаря правильному использованию CSS (высокий z-index для заголовка).

Стек технологий
Язык программирования: Python
Обработка данных: pandas, BeautifulSoup (для парсинга HTML)
База данных: SQLite (работа через SQLAlchemy)
Веб-фреймворк: Flask
Frontend: HTML, CSS, JavaScript (AJAX для реализации infinite scroll)
Как запустить проект
Клонируйте репозиторий:

bash
Копировать
Редактировать
git clone https://github.com/yourusername/coin-explorer.git
cd coin-explorer
Установите зависимости:

bash
Копировать
Редактировать
pip install -r requirements.txt
(Убедитесь, что установлены Flask, Flask-SQLAlchemy, pandas, beautifulsoup4 и другие необходимые библиотеки.)

Подготовьте данные:

Выполните скрипт для парсинга HTML-страниц (если он включён) для получения DataFrame с данными о монетах.
Приложение автоматически создаст и заполнит базу данных coins.db, если она отсутствует.
Запустите приложение:

python app.py
Откройте браузер и перейдите по адресу http://127.0.0.1:5000, чтобы начать исследование коллекции монет.

Заключение
Coin Explorer — это демонстрация моих навыков в data science и веб-разработке. Проект охватывает полный цикл обработки данных: от парсинга HTML и их структурирования до создания интерактивного веб-интерфейса с динамической подгрузкой, поиском и пользовательской сортировкой. 
Буду рад обсудить этот проект. Благодарю за внимание!